# Definitions for extended memory EMT64 Intel FORTRAN compiler
# with settings for AMD Opteron processor
# =========== === ===== === ======= ======== == =====

.SUFFIXES: .o .f .F .f90

.F.o:
	$(CPP) -P $(CPPFLAGS) $*.F | ./mpc > $*.f
	$(CFT) -c $(FFLAGS) $*.f -o $*.o
#/bin/rm -f $*.f
.F.f:
	$(CPP) -P $(CPPFLAGS) $*.F | ./mpc > $*.f
.f.o:
	$(CFT) -c $(FFLAGS) $*.f -o $*.o
.f90.o:
	$(CFT) -c $(FFLAGS) $*.f90 -o $*.o
.F:
	$(CFT) -o $@ $(FFLAGS) $(LDFLAGS) $<
.f:
	$(CFT) -o $@ $(FFLAGS) $(LDFLAGS) $<
.o:
	$(CFT) -o $@ $(FFLAGS) $(LDFLAGS) $<


#
# C-preprocessor from Intel compiler package. Note: in this case
# __IFC is a pre-defined macro, so there is no need to include it
# into CPPFLAGS.
#
#     CPP = fpp

      CPP = /lib/cpp -traditional
 CPPFLAGS = -D__IFC -I/usr/include/openmpi-x86_64/ -I/opt/intel/netcdf/include/
# -DHOFFMAN2


#
# Compiler settings:  -fpp2 is required only if -openmp is present.
# Not having -fpp2 here just causes compiler warning (-fpp is set to
# level 2 by -openmp), but other than that has no effect.

# Switch -pc80 increases precision of floating point operation to
# 64 bits (vs. 53 bits double precision default).
#
# -qp  compiles and links for function profiling with  gprof(1);
#      this is the same as specifying -p or -pg.
#
# Setting  FFLAGS = -O2 -mp (or lower optimization level) is needed
# to pass ETALON_CHECK: -O3 causes roundoff-level differences from
# the length of innermost i-loop (the results still pass ETALON_CHECK
# if  NP_XI = NSUB_X = 1, regardless of partition in ETA-direction). 

# Flags collected under LARGE_MEM_FLAG are needed only if exceeding 
# 2 GBytes of memory: both -mcmodel (sets size of addressing pointers)
# and -i-dynamic (ensures proper linking with Intel dynamic libraries
# must be specified.


# OMP_FLAG = -fpp2 -openmp

# LARGE_MEM_FLAG = -mcmodel=medium -i-dynamic

     CFT = ifort $(OMP_FLAG) -pc80 -align dcommon -auto -stack_temps

#     LMPI =-L/usr/lib64/openmpi/lib  -lmpi -lmpi_f90 -lmpi_f77 -lopen-rte -lopen-pal 
     LMPI =-L/opt/openmpi/lib  -lmpi -lmpi_f90 -lmpi_f77 -lopen-rte -lopen-pal 
     LCDF = -L/opt/intel/netcdf/lib/ -lnetcdf

     LDR = $(CFT)


#    FFLAGS =  -O2 -mp1 -fp-model strict
    FFLAGS =  -g -mp1 -check all -fpe0 -I/usr/include/openmpi-x86_64


 COMP_FILES = work.pc work.pcl ifort*

